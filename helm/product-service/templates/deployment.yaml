apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.productService.name }}
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.productService.name }}
spec:
  replicas: {{ .Values.productService.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.productService.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.productService.name }}
      annotations:
        sidecar.istio.io/inject: "{{ .Values.istio.inject }}"
    spec:
      containers:
        - name: {{ .Values.productService.name }}
          image: {{ .Values.productService.image }}
          imagePullPolicy: {{ .Values.productService.imagePullPolicy }}
          ports:
            - containerPort: {{ .Values.productService.containerPort }}
          resources:
            requests:
              cpu: {{ .Values.productService.resources.requests.cpu }}
              memory: {{ .Values.productService.resources.requests.memory }}
            limits:
              cpu: {{ .Values.productService.resources.limits.cpu }}
              memory: {{ .Values.productService.resources.limits.memory }}
          env:
            - name: DATABASE_URL
              value: {{ .Values.database.url }}
            - name: DATABASE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.name }}
                  key: DATABASE_USERNAME
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.name }}
                  key: DATABASE_PASSWORD
          livenessProbe:
            httpGet:
              path: {{ .Values.productService.livenessProbe.httpGet.path }}
              port: {{ .Values.productService.containerPort }}
            initialDelaySeconds: {{ .Values.productService.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.productService.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.productService.livenessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.productService.livenessProbe.failureThreshold }}

          readinessProbe:
            httpGet:
              path: {{ .Values.productService.readinessProbe.httpGet.path }}
              port: {{ .Values.productService.containerPort }}
            initialDelaySeconds: {{ .Values.productService.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.productService.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.productService.readinessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.productService.readinessProbe.failureThreshold }}